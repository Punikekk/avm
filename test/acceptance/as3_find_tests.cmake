function(as3_find_tests_at dir)
    file(GLOB tests ${dir}/*.as)
    if (NOT tests)
        return()
    endif ()

    foreach (test ${tests})
        get_filename_component(src ${test} NAME)
        get_filename_component(src_name ${test} NAME_WLE)
        get_filename_component(src_dir ${test} DIRECTORY)
        set(args ${test})
        get_property(skip SOURCE ${test} PROPERTY AS3_IGNORE_THIS)
        get_property(file_args SOURCE ${test} PROPERTY AS3_ARGUMENTS)
        if (skip)
            continue()
        endif ()
        if (file_args)
            list(APPEND args ${file_args})
        endif ()
        file(GLOB support ${src_dir}/${src_name}/*.as)
        if (support)
            list(LENGTH support support_length)
            if (support_length GREATER 1)
                foreach (sup_src ${support})
                    file(RELATIVE_PATH sup_src ${src_dir}/${src_name} ${sup_src})
                    if (NOT sup_src MATCHES "^[A-Z]_")
                        message(WARNING "Support code at ${src_dir}/${src_name} may not be ordered correctly")
                        break()
                    endif ()
                endforeach ()
            endif ()
            list(APPEND args SUPPORT ${support})
        endif ()
        as3_add_test(${args})
    endforeach ()
endfunction()

function(as3_find_tests glob)
    file(GLOB dirs ${glob} LIST_DIRECTORIES true)
    foreach (dir ${dirs})
        if (IS_DIRECTORY ${dir})
            as3_find_tests_at(${dir})
        endif ()
    endforeach ()
endfunction()

function(set_src_properties glob property)
    file(GLOB_RECURSE files ${glob})
    foreach (file ${files})
        set_property(SOURCE ${file} PROPERTY ${property} ${ARGN})
    endforeach ()
endfunction()

function(as3_set_arguments glob)
    set_src_properties(${glob} AS3_ARGUMENTS ${ARGN})
endfunction()

function(as3_ignore glob)
    set_src_properties(${glob} AS3_IGNORE_THIS 1)
endfunction()